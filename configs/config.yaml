
# #################### Default Setup ####################
# wandb: False
# seed: 0
# enable_benchmark: True
# use_amp: True
# multiprocessing: False
# main_gpu: '0'
# num_workers: 1
# pin_memory: False
# refactoring: True
# verbose: False
# # method_name: FedAvg
# remark: ""

# checkpoint_path: './checkpoints'
# exp_name: base
# output_model_path: 'res18.pt'
# save_freq: 1000
# batch_size: 64
# save_test: False 

# ## Resume
# load_model_path: False      # ====> may be like ./checkpoints/CIFAR100/iid/iid_base/res18.pt. use command line +load_model_path=(path)
# wandb_resume_id: False


# ###### wandb && logging ######
# project: "FedRCL"
# log_dir: './checkpoints' 


# #################### Data Split ####################
# split:
#   mode: 'dirichlet'
#   alpha: 0.3
#   class_per_client: 0 # only for skew mode
#   unbalanced: False
#   overlap_ratio: 0.0
#   create_client_dataset: False

# #################### Optimizer ####################
# optimizer:
#   name: sgd
#   momentum: 0.0
#   wd: 1e-3


# #################### Eval ####################
# eval:
#   freq: 1
#   batch_size: 64

# analysis: False

# defaults:
#   - _self_
#   - trainer: base
#   - client: base
#   - evaler: base
#   - dataset: cifar100
#   - server: base
#   - model: resnet18
#   - override hydra/job_logging: default
#   - override hydra/hydra_logging: default


# #################### Default Setup ####################
# wandb: False
# seed: 0
# enable_benchmark: True
# use_amp: True
# multiprocessing: True
# main_gpu: '0'
# num_workers: 4
# pin_memory: True
# refactoring: True
# verbose: False
# # method_name: FedAvg
# remark: ""

# checkpoint_path: './checkpoints'
# exp_name: base
# output_model_path: 'res18.pt'
# save_freq: 1000
# batch_size: 64
# save_test: False 

# ## Resume
# load_model_path: False      # ====> may be like ./checkpoints/CIFAR100/iid/iid_base/res18.pt. use command line +load_model_path=(path)
# wandb_resume_id: False


# ###### wandb && logging ######
# project: "FedRCL"
# log_dir: './checkpoints' 


# #################### Data Split ####################
# split:
#   mode: 'dirichlet'
#   alpha: 0.3
#   class_per_client: 0 # only for skew mode
#   unbalanced: False
#   overlap_ratio: 0.0
#   create_client_dataset: False

# #################### Optimizer ####################
# optimizer:
#   name: sgd
#   momentum: 0.0
#   wd: 1e-3


# #################### Eval ####################
# eval:
#   freq: 1
#   batch_size: 64

# analysis: False


# defaults:
#   - _self_  #
#   - trainer: base
#   - client: base
#   - evaler: base
#   - dataset: cifar100  # Change dataset to the appropriate name here
#   - server: base
#   - model: resnet18


# #################### Dataset Path ####################
# dataset_paths:
#   cifar10: "/kaggle/input/cifar-10-batches-py"
#   cifar100: "data/cifar-100-python"
#   tiny_imagenet: "data/tiny-imagenet-200"

# trainer:
#   epochs: 10

wandb: False
seed: 0
enable_benchmark: True
use_amp: True
multiprocessing: True  # Enable multiprocessing
main_gpu: '0'  # Use GPU 0
num_workers: 4
pin_memory: True
refactoring: True
verbose: True
remark: ""

# checkpoint_path: './checkpoints'
checkpoint_path: "/kaggle/working/checkpoints"
exp_name: base
output_model_path: 'res18.pt'
save_freq: 50  
batch_size: 32
save_test: False

## Resume
load_model_path: False
wandb_resume_id: False

###### wandb && logging ######
project: "FedRCL"
# log_dir: './checkpoints'
log_dir: "/kaggle/working/checkpoints"


#################### Data Split ####################
split:
  mode: 'dirichlet'
  alpha: 0.3
  class_per_client: 0
  unbalanced: False
  overlap_ratio: 0.0
  create_client_dataset: False

#################### Optimizer ####################
optimizer:
  name: sgd
  momentum: 0.0
  wd: 1e-3

server:
  name: Server

# trainer:
#   global_rounds: 10

#################### Eval ####################
eval:
  freq: 1
  batch_size: 32

analysis: False

loss:
  dynamic_beta: True  # Enable dynamic beta
  beta_min: 0.1       # Minimum value of beta
  beta_max: 1.0       # Maximum value of beta
  beta_decay: 0.99    # Decay rate for beta
  class_aware_beta: True  # Enable class-aware beta

#################### Dataset Path ####################
dataset_paths:
  cifar10: "/kaggle/input/cifar-10-batches-py"
  cifar100: "data/cifar-100-python"
  tiny_imagenet: "data/tiny-imagenet-200"

#################### Trainer ####################



#################### Model ####################
model:
  name: resnet18
  pretrained: False

#################### Defaults ####################
defaults:
  - _self_
  - trainer: base
  - client: fedrcl
  - evaler: base
  - dataset: cifar100
  - server: base
  - model: resnet18
